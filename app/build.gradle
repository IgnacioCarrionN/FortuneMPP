plugins {
    id 'org.jetbrains.kotlin.multiplatform'
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.3.60'
}
repositories {
    google()
    jcenter()
    mavenCentral()
}
apply plugin: 'com.android.application'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.squareup.sqldelight'

sqldelight {
    MyDatabase {
        packageName = 'data.db'
    }
}

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId 'org.jetbrains.kotlin.mpp_app_android'
        minSdkVersion 15
        targetSdkVersion 28
        versionCode 1
        versionName '1.0'
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {
        release {
            minifyEnabled false
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        pickFirst 'META-INF/ktor-client-serialization.kotlin_module'
        pickFirst 'META-INF/ktor-http.kotlin_module'
        pickFirst 'META-INF/ktor-utils.kotlin_module'
        pickFirst 'META-INF/kotlinx-coroutines-core.kotlin_module'
        pickFirst 'META-INF/kotlinx-serialization-runtime.kotlin_module'
        pickFirst 'META-INF/ktor-io.kotlin_module'
        pickFirst 'META-INF/ktor-http-cio.kotlin_module'
        pickFirst 'META-INF/ktor-client-json.kotlin_module'
        pickFirst 'META-INF/ktor-client-core.kotlin_module'
        pickFirst 'META-INF/proguard/coroutines.pro'
        pickFirst 'META-INF/proguard/androidx-annotations.pro'
        pickFirst 'META-INF/kodein-di-erased.kotlin_module'
        pickFirst 'META-INF/kodein-di-core.kotlin_module'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    implementation 'com.google.android.material:material:1.0.0'
}

kotlin {
    android("android")
    // This is for iPhone emulator
    // Switch here to iosArm64 (or iosArm32) to build library for iPhone device
    iosX64("ios") {
        binaries {
            framework()
        }
    }
    sourceSets {
        commonMain {
            dependencies {
                implementation kotlin('stdlib-common')
                implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime-common:0.14.0"
                implementation "io.ktor:ktor-client:1.3.0-rc2"
                implementation "io.ktor:ktor-client-json:1.3.0-rc2"
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core-common:1.3.3"
                implementation "io.ktor:ktor-client-serialization:1.3.0-rc2"
                implementation 'io.ktor:ktor-client-okhttp:1.3.0-rc2'
                implementation 'org.kodein.di:kodein-di-core:6.0.1'
                //implementation 'org.kodein.di:kodein-di-core-metadata:6.0.1'
                implementation 'org.kodein.di:kodein-di-erased:6.0.1'
                //implementation 'org.kodein.di:kodein-di-erased-metadata:6.0.1'
                implementation "com.squareup.sqldelight:runtime:1.2.1"
                implementation "com.squareup.sqldelight:coroutines-extensions:1.2.1"
            }
        }
        commonTest {
            dependencies {
        		implementation kotlin('test-common')
        		implementation kotlin('test-annotations-common')
            }
        }
        androidMain {
            dependencies {
                implementation kotlin('stdlib')
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.3"
                implementation "io.ktor:ktor-client-json-jvm:1.3.0-rc2"
                implementation 'io.ktor:ktor-client-okhttp:1.3.0-rc2'
                implementation "io.ktor:ktor-client-serialization-jvm:1.3.0-rc2"
                implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime:0.14.0"
                implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.2.0-rc03"
                implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0-rc03"
                implementation 'org.kodein.di:kodein-di-erased-jvm:6.0.1'
                implementation 'org.kodein.di:kodein-di-framework-android-x:6.0.1'
                implementation "com.squareup.sqldelight:android-driver:1.2.1"
            }
        }
        androidTest {
            dependencies {
                implementation kotlin('test')
                implementation kotlin('test-junit')
            }
        }
        iosMain {
            dependencies {
                implementation "io.ktor:ktor-client-ios:1.3.0-rc2"
                implementation "com.squareup.sqldelight:ios-driver:1.2.1"
            }
        }
        iosTest {
        }
    }
}

// This task attaches native framework built from ios module to Xcode project
// (see iosApp directory). Don't run this task directly,
// Xcode runs this task itself during its build process.
// Before opening the project from iosApp directory in Xcode,
// make sure all Gradle infrastructure exists (gradle.wrapper, gradlew).
task copyFramework {
    def buildType = project.findProperty('kotlin.build.type') ?: 'DEBUG'
    def target = project.findProperty('kotlin.target') ?: 'ios'
    dependsOn kotlin.targets."$target".binaries.getFramework(buildType).linkTask

    doLast {
        def srcFile = kotlin.targets."$target".binaries.getFramework(buildType).outputFile
        def targetDir = getProperty('configuration.build.dir')
        copy {
            from srcFile.parent
            into targetDir
            include 'app.framework/**'
            include 'app.framework.dSYM'
        }
    }
}